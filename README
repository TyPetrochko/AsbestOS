Tyler implemented the MContainer and MPTIntro layers. Alex implemented MPTOp, MPTNew, and MPTKern. We both worked on MPTComm.

In the MPTOp layer, we implemented functions to get, set, and remove page directory and page table entries by virtual address by first processing the addresses using bit shifts so as to determine the index of the page directory and page table. 

In the MPTComm layer, we wrote the functions to initialize the page directories and to allocate and free pages for page directory entries. We used the container_alloc function from MContainer as well as the getters and setters written in previous layers.

In the MPTKern layer, we wrote the functions which initialize the page directory entries for process 0, the kernel process. We also wrote functions to associate virtual addresses with pages. In addition the functionality already implemented, these functions first check whether the page table is allocated for a given directory entry, and if not, they allocate it.

In the MPTNew layer, we wrote the function which first allocates a new page for a given process and then maps that page to the given virtual address.